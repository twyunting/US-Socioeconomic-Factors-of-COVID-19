plot(ToothGrowth)
cor(ToothGrowth)
ToothGrowth
ToothGrowth %>%
count(supp)
ToothGrowth %>%
count(len)
ToothGrowth %>%
count(dose)
ToothGrowth
regsubsets(qsec ~ ., data = mtcars)[4]
summary(best)$adjr2
which.max(summary(best)$adjr2)
summary(best)$cp
which.min(summary(best)$cp)
summary(best)$bic
which.min(summary(best)$bic)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(car)
mtcars %>%
head()
library(leaps)
best <-  regsubsets(qsec ~ ., data = mtcars)
summary(best)
summary(best)$adjr2
which.max(summary(best)$adjr2)
summary(best)$cp
which.min(summary(best)$cp)
library(leaps)
best <-  regsubsets(qsec ~ ., data = mtcars)
summary(best)
summary(best)$adjr2
which.max(summary(best)$adjr2)
summary(best)$cp
which.min(summary(best)$cp)
summary(best)$bic
which.min(summary(best)$bic)
# the best model
reg <- lm(qsec ~disp +wt + vs + carb, data = mtcars)
summary(reg)
plot(mtcars)
mtcars
plot(mtcars)
# cor(mtcars)
corrplot(cor(mtcars), method="color", addCoef.col="black", number.cex=0.5, type="lower")
plot(mtcars)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col="black", number.cex=0.5, type="lower")
install.packages("arm")
library(arm)
plot(mtcars)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col="black", number.cex=0.5, type="lower")
library(car)
plot(mtcars)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col="black", number.cex=0.5, type="lower")
library(corrplot)
plot(mtcars)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col="black", number.cex=0.5, type="lower")
library(corrplot)
plot(mtcars)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col="black", number.cex=0.5, type="lower")
# plot(mtcars)
library(corrplot)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col = "black", number.cex = 0.5, type = "lower")
mtcars
# plot(mtcars)
library(corrplot)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col = "black", number.cex = 0.5, type = "lower")
mtcars %>%
select(qsec, disp, wt, vs, carb)
mtcars %>%
dplyr::select(qsec, disp, wt, vs, carb)
mtcars
modelVariables
mtcars %>%
dplyr::select(qsec, disp, wt, vs, carb) -> modelVariables
plot(modelVariables)
knitr::opts_chunk$set(fig.align  = "center",
fig.height = 5,
fig.width  = 6)
# Installed library
library(tidyverse)
url_in <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/"
df <- tibble(file_names = c("time_series_covid19_confirmed_global.csv",
"time_series_covid19_deaths_global.csv",
"time_series_covid19_confirmed_US.csv",
"time_series_covid19_deaths_US.csv")) -> df
df %>%
mutate(url = str_c(url_in, file_names, sep = "")) -> df
df %>%
mutate(data = map(url, ~read_csv(., na = ""))) -> df
df
View(df)
df$
file_names
df$file_names
df %>%
mutate(case_types = as.factor(str_extract(file_names, "[:alpha:]*_[gU][:alpha:]*"))) ->
df
df
df %>%
dplyr::elect(case_types, data) -> df
df %>%
dpylr::elect(case_types, data) -> df
df %>%
dplyr::select(case_types, data) -> df
df
df
df %>%
mutate(vars = map(df$vars, ~unlist(.)[1:15]))
df %>%
mutate(vars = map(df$data, names)) -> df
df %>%
mutate(vars = map(df$vars, ~unlist(.)[1:15])) # for 2021 Spring STAT-613
# map(df$vars, ~unlist(.)[1:15]) for checking
fix_names <- function(df, pattern, rePattern){
stopifnot(is.data.frame(df), is.character(pattern), is.character(rePattern))
names(df) <- str_replace_all(names(df), pattern, rePattern)
return(df)
}
# b-f
df %>%
mutate(data = map(data, ~fix_names(., "([ey])/", "\\1_")))
df$data[1]
df$data
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
printcp(reg.tree)
rpart.plot(reg.tree)
reg.tree$variable.importance
set.seed(1)
# build a training set
train <- sample(1:nrow(covid_df), nrow(covid_df)/2)
tree.covid <- rpart(deaths ~ ., subset = train, data = covid_df)
summary(tree.covid)
library(rpart.plot)
rpart.plot(tree.covid)
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
# attach necessary packages
library(ISLR)           # data sets
library(rpart)          # decision tree methodology
library(rpart.plot)     # decision tree visualization
library(randomForest)   # random forest methodology
install.packages("randomForest")
# attach necessary packages
library(ISLR)           # data sets
library(rpart)          # decision tree methodology
library(rpart.plot)     # decision tree visualization
library(randomForest)   # random forest methodology
library(gbm)            # boosting methodology
install.packages("gbm")
# attach necessary packages
library(ISLR)           # data sets
library(rpart)          # decision tree methodology
library(rpart.plot)     # decision tree visualization
library(randomForest)   # random forest methodology
library(gbm)            # boosting methodology
# read in Heart data set
Heart <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Heart.csv")
# ensure reproducibility
set.seed(200)
# transform salary variable to the logarithm of salary
Hitters$Salary <- log(Hitters$Salary)
# sample 70% of the row indices for training the models
trainHit <- sample(1:nrow(Hitters), 0.7*nrow(Hitters))
trainHeart <- sample(1:nrow(Heart), 0.7*nrow(Heart))
# fit decision tree to Hitters data
salfit <- rpart(formula = Salary ~ Years + Hits, data = Hitters[trainHit,],
method = "anova", control = rpart.control(maxdepth = 2))
# display results
prp(salfit)
Hitters[trainHit,]
Hitters
Hitters$Salary
Salary
Hitters
log(6.163315)
log(735,095.20)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
12/51
36.362	+25.011	+20.534+ 20.875	+41.974	+16.325	+20.269	+34.381
215.731/8
8/51
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
332e+3
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
#covid_df %>%
#mutate(IncomeTwenty = IncomeTwenty/1000,
#confirmed = confirmed/1000,
#deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
332e+3
covid_df
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df %>%
mutate(IncomeTwenty = IncomeTwenty/1000,
confirmed = confirmed/1000,
deaths = deaths/1000) -> covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586)
mtcars %>%
dplyr::select(qsec, disp, wt, vs, carb) -> modelVariables
plot(modelVariables)
library(corrplot)
correlation <- cor(mtcars)
corrplot(correlation, method="color", addCoef.col = "black", number.cex = 0.5, type = "lower")
mtcars %>%
dplyr::select(qsec, disp, wt, vs, carb) -> modelVariables
plot(modelVariables)
library(corrplot)
correlation <- cor(modelVariables)
corrplot(correlation, method="color", addCoef.col = "black", number.cex = 0.5, type = "lower")
# Add interaction into the model
intercationReg <- lm(qsec ~ wt * am, data = mtcars)
summary(intercationReg)
predict(reg, data.frame(X1=6,X2=hp), interval="confidence", level = 0.90)
ToothGrowth
toothReg <- lm(qsec ~ supp + dose, data = ToothGrowth)
toothReg <- lm(len ~ supp + dose, data = ToothGrowth)
summary(toothReg)
# Testing for constant variance
library(car)
ncvTest(reg)
# Testing for constant variance
library(car)
ncvTest(toothReg)
full.model = lm( Y ~ as.factor(supp) + as.factor(dose))
# Testing the Normality
# Testing for constant variance
library(car)
ncvTest(toothReg)
# Lack of fit test
full.model = lm( len ~ as.factor(supp) + as.factor(dose))
# Testing the Normality
# Testing for constant variance
library(car)
ncvTest(toothReg)
# Lack of fit test
full.model = lm( len ~ as.factor(supp) + as.factor(dose), data = ToothGrowth)
anova(toothReg, full.model)
plot(ToothGrowth)
plot(toothReg)
par(mfrow = c(2, 2))
plot(toothReg)
shapiro.test(toothReg)
# Plot
par(mfrow = c(2, 2))
plot(toothReg)
# Testing the Normality
shapiro.test(toothReg)
# Plot
par(mfrow = c(2, 2))
plot(toothReg)
# Testing the Normality
shapiro.test(toothReg)
# Add interaction into the model
intercationReg <- lm(qsec ~ wt * am, data = mtcars)
summary(intercationReg)
predict(reg, data.frame(cyl = 6,hp = 150), interval = "confidence", level = 0.90)
predict(reg, data.frame(cyl = 6,hp = 150), interval = "confidence", level = 0.90)
# the best model
reg <- lm(qsec ~disp +wt + vs + carb, data = mtcars)
summary(reg)
mtcars %>%
dplyr::select(qsec, disp, wt, vs, carb) -> modelVariables
plot(modelVariables)
library(corrplot)
correlation <- cor(modelVariables)
corrplot(correlation, method="color", addCoef.col = "black", number.cex = 0.5, type = "lower")
# Add interaction into the model
intercationReg <- lm(qsec ~ wt * am, data = mtcars)
summary(intercationReg)
predict(reg, data.frame(cyl = 6,hp = 150), interval = "confidence", level = 0.90)
reg
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
#covid_df %>%
#filter(IncomeTwenty >= 586)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
#covid_df %>%
#filter(IncomeTwenty >= 586)
covid_df
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
#covid_df %>%
#filter(IncomeTwenty >= 586)
covid_df %>%
filter(IncomeTwenty >= 586000)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586000)
8/51
covid_df %>%
filter(IncomeTwenty >= 586000)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
covid_df %>%
filter(IncomeTwenty >= 586000)
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
#covid_df %>%
# filter(IncomeTwenty >= 586000)
summary(toothReg)
full.model = lm( len ~ as.factor(supp) + as.factor(dose), data = ToothGrowth)
anova(toothReg, full.model)
aaa <- m(len ~ supp + dose, data = ToothGrowth)
aaa <- lm(len ~ supp + dose, data = ToothGrowth)
summary(aaa)
aaa <- lm(len ~ supp * dose, data = ToothGrowth)
summary(aaa)
# Plot
par(mfrow = c(2, 2))
plot(toothReg)
# Testing the Normality
shapiro.test(toothReg)
plot(toothReg)
par(mfrow = c(2, 2))
plot(toothReg)
shapiro.test(toothReg)
covid_dftmp
covid_df
library(tidyverse)
library(rpart)
library(rpart.plot)
covid_dftmp <- read_csv("./data/covid_df_regression.csv")
covid_dftmp %>%
dplyr::select(-Province_State, -Total_Population) -> covid_df
# dplyr::select(confirmed, IncomeTwenty, deaths, Total_Population) -> covid_df
covid_df
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
printcp(reg.tree)
rpart.plot(reg.tree)
#covid_df %>%
# filter(IncomeTwenty >= 586000)
reg.tree <- rpart(deaths ~ ., data = covid_df)
summary(reg.tree)
rpart.plot(reg.tree)
reg.tree <- rpart(deaths ~ ., data = covid_df)
rpart.plot(reg.tree)
summary(reg.tree)
reg.tree$variable.importance
plot(ToothGrowth)
par(mfrow = c(2, 2))
plot(toothReg)
